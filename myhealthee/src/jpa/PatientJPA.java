package jpa;
// Generated 28-nov-2019 14:02:34 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "patient", schema = "public")
public class PatientJPA implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String id;
	private FamilydoctorJPA familydoctor;
	private String nif;
	private String name;
	private String surname;
	private String password;
	private String email;
	private Set<MedicaltestJPA> medicaltests = new HashSet<MedicaltestJPA>(0);
	private Set<VisitJPA> visits = new HashSet<VisitJPA>(0);
	private Set<QuestionJPA> questions = new HashSet<QuestionJPA>(0);

	public PatientJPA() {
	}

	public PatientJPA(String id, FamilydoctorJPA familydoctor, String nif, String name, String surname, String password,
			String email) {
		this.id = id;
		this.familydoctor = familydoctor;
		this.nif = nif;
		this.name = name;
		this.surname = surname;
		this.password = password;
		this.email = email;
	}

	public PatientJPA(String id, FamilydoctorJPA familydoctor, String nif, String name, String surname, String password,
			String email, Set<MedicaltestJPA> medicaltests, Set<VisitJPA> visits, Set<QuestionJPA> questions) {
		this.id = id;
		this.familydoctor = familydoctor;
		this.nif = nif;
		this.name = name;
		this.surname = surname;
		this.password = password;
		this.email = email;
		this.medicaltests = medicaltests;
		this.visits = visits;
		this.questions = questions;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, length = 20)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "familydoctor_id", nullable = false)
	public FamilydoctorJPA getFamilydoctor() {
		return this.familydoctor;
	}

	public void setFamilydoctor(FamilydoctorJPA familydoctor) {
		this.familydoctor = familydoctor;
	}

	@Column(name = "nif", nullable = false, length = 9)
	public String getNif() {
		return this.nif;
	}

	public void setNif(String nif) {
		this.nif = nif;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", nullable = false, length = 100)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "password", nullable = false, length = 20)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<MedicaltestJPA> getMedicaltests() {
		return this.medicaltests;
	}

	public void setMedicaltests(Set<MedicaltestJPA> medicaltests) {
		this.medicaltests = medicaltests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<VisitJPA> getVisits() {
		return this.visits;
	}

	public void setVisits(Set<VisitJPA> visits) {
		this.visits = visits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<QuestionJPA> getQuestions() {
		return this.questions;
	}

	public void setQuestions(Set<QuestionJPA> questions) {
		this.questions = questions;
	}

}
