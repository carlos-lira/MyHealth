package jpa;
// Generated 28-nov-2019 14:02:34 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Medicaltest generated by hbm2java
 */
@Entity
@Table(name = "medicaltest", schema = "public")
public class MedicaltestJPA implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long id;
	private PatientJPA patient;
	private SpecialistdoctorJPA specialistdoctor;
	private TesttypeJPA testtype;
	private Date time;
	private Date date;
	private long type;
	private String result;
	private String highresimagelocation;

	public MedicaltestJPA() {
	}

	public MedicaltestJPA(long id, PatientJPA patient, SpecialistdoctorJPA specialistdoctor, TesttypeJPA testtype, Date time,
			Date date, long type) {
		this.id = id;
		this.patient = patient;
		this.specialistdoctor = specialistdoctor;
		this.testtype = testtype;
		this.time = time;
		this.date = date;
		this.type = type;
	}

	public MedicaltestJPA(long id, PatientJPA patient, SpecialistdoctorJPA specialistdoctor, TesttypeJPA testtype, Date time,
			Date date, long type, String result, String highresimagelocation) {
		this.id = id;
		this.patient = patient;
		this.specialistdoctor = specialistdoctor;
		this.testtype = testtype;
		this.time = time;
		this.date = date;
		this.type = type;
		this.result = result;
		this.highresimagelocation = highresimagelocation;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patient_id", nullable = false)
	public PatientJPA getPatient() {
		return this.patient;
	}

	public void setPatient(PatientJPA patient) {
		this.patient = patient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "specialistdoctor_id", nullable = false)
	public SpecialistdoctorJPA getSpecialistdoctor() {
		return this.specialistdoctor;
	}

	public void setSpecialistdoctor(SpecialistdoctorJPA specialistdoctor) {
		this.specialistdoctor = specialistdoctor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "testtype_id", nullable = false)
	public TesttypeJPA getTesttype() {
		return this.testtype;
	}

	public void setTesttype(TesttypeJPA testtype) {
		this.testtype = testtype;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "time", nullable = false, length = 22)
	public Date getTime() {
		return this.time;
	}

	public void setTime(Date time) {
		this.time = time;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", nullable = false, length = 22)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "type", nullable = false)
	public long getType() {
		return this.type;
	}

	public void setType(long type) {
		this.type = type;
	}

	@Column(name = "result", length = 50)
	public String getResult() {
		return this.result;
	}

	public void setResult(String result) {
		this.result = result;
	}

	@Column(name = "highresimagelocation", length = 2000)
	public String getHighresimagelocation() {
		return this.highresimagelocation;
	}

	public void setHighresimagelocation(String highresimagelocation) {
		this.highresimagelocation = highresimagelocation;
	}

}
